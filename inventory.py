{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Inventory Management System Menu:\n",
      "1. Add Product\n",
      "2. Exit\n",
      "Product added successfully!\n",
      "\n",
      "Inventory Management System Menu:\n",
      "1. Add Product\n",
      "2. Exit\n",
      "Product added successfully!\n",
      "\n",
      "Inventory Management System Menu:\n",
      "1. Add Product\n",
      "2. Exit\n",
      "Product added successfully!\n",
      "\n",
      "Inventory Management System Menu:\n",
      "1. Add Product\n",
      "2. Exit\n",
      "Product added successfully!\n",
      "\n",
      "Inventory Management System Menu:\n",
      "1. Add Product\n",
      "2. Exit\n",
      "Invalid choice. Please try again.\n",
      "\n",
      "Inventory Management System Menu:\n",
      "1. Add Product\n",
      "2. Exit\n",
      "Invalid choice. Please try again.\n",
      "\n",
      "Inventory Management System Menu:\n",
      "1. Add Product\n",
      "2. Exit\n",
      "Invalid choice. Please try again.\n",
      "\n",
      "Inventory Management System Menu:\n",
      "1. Add Product\n",
      "2. Exit\n",
      "Invalid choice. Please try again.\n",
      "\n",
      "Inventory Management System Menu:\n",
      "1. Add Product\n",
      "2. Exit\n",
      "Invalid choice. Please try again.\n",
      "\n",
      "Inventory Management System Menu:\n",
      "1. Add Product\n",
      "2. Exit\n",
      "Invalid choice. Please try again.\n",
      "\n",
      "Inventory Management System Menu:\n",
      "1. Add Product\n",
      "2. Exit\n",
      "Invalid choice. Please try again.\n",
      "\n",
      "Inventory Management System Menu:\n",
      "1. Add Product\n",
      "2. Exit\n",
      "Exiting...\n"
     ]
    }
   ],
   "source": [
    "import sqlite3\n",
    "\n",
    "# Connect to the database (or create it if it doesn't exist)\n",
    "conn = sqlite3.connect('inventory.db')\n",
    "\n",
    "# Create a cursor object to execute SQL commands\n",
    "c = conn.cursor()\n",
    "\n",
    "# Create a table to store product information\n",
    "c.execute('''CREATE TABLE IF NOT EXISTS products (\n",
    "                id INTEGER PRIMARY KEY,\n",
    "                name TEXT NOT NULL,\n",
    "                quantity INTEGER NOT NULL,\n",
    "                price REAL NOT NULL\n",
    "            )''')\n",
    "\n",
    "# Function to add a new product to the database\n",
    "def add_product():\n",
    "    name = input(\"Enter product name: \")\n",
    "    quantity = int(input(\"Enter quantity: \"))\n",
    "    price = float(input(\"Enter price: \"))\n",
    "    c.execute(\"INSERT INTO products (name, quantity, price) VALUES (?, ?, ?)\", (name, quantity, price))\n",
    "    conn.commit()\n",
    "    print(\"Product added successfully!\")\n",
    "\n",
    "# Function to display the menu\n",
    "def display_menu():\n",
    "    print(\"\\nInventory Management System Menu:\")\n",
    "    print(\"1. Add Product\")\n",
    "    print(\"2. Exit\")\n",
    "\n",
    "# Main function to run the program\n",
    "def main():\n",
    "    while True:\n",
    "        display_menu()\n",
    "        choice = input(\"Enter your choice: \")\n",
    "\n",
    "        if choice == '1':\n",
    "            add_product()\n",
    "        elif choice == '2':\n",
    "\n",
    "            print(\"Exiting...\")\n",
    "            break\n",
    "        else:\n",
    "            print(\"Invalid choice. Please try again.\")\n",
    "\n",
    "if __name__ == \"__main__\":\n",
    "    main()\n",
    "\n",
    "# Close the database connection\n",
    "conn.close()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
